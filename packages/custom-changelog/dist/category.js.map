{"version":3,"file":"category.js","sourceRoot":"","sources":["../src/category.ts"],"names":[],"mappings":";;;;;;AAAA,gEAAuC;AACvC,iCAA+D;AAQxD,KAAK,UAAU,aAAa,CAAC,OAAe,EAAE,UAA2B,EAAE,KAAa,EAAE,IAAY,EAAE,QAAgB;;IAE7H,MAAM,qBAAqB,GAAG,CAAC,OAAe,EAAE,EAAE,CAAC,CAAC,IAAA,sBAAW,EAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAExF,MAAM,EAAE,GAAG,MAAM,IAAA,4CAAqC,EAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;IAE9E,MAAM,MAAM,GAAG,MAAA,EAAE,aAAF,EAAE,uBAAF,EAAE,CAAE,MAAM,0CAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IAC9C,MAAM,YAAY,GAAG,CAAC,MAAc,EAAE,EAAE,CAAC,CAAC,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;IAEpE,MAAM,QAAQ,GAAkB,EAAE,CAAC;IACnC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;QACvB,IACE,CAAC,CAAC,CAAC,wBAAwB,IAAI,CAAC,CAAC,wBAAwB,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;eAChG,CAAC,CAAC,CAAC,iBAAiB,IAAI,CAAC,CAAC,iBAAiB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EAC/E;YACA,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;SAC7B;IACH,CAAC,CAAC,CAAC;IAEH,MAAM,eAAe,GAAG,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC;IAC3F,OAAO,eAAe,CAAC;AACzB,CAAC;AArBD,sCAqBC","sourcesContent":["import RegexParser from 'regex-parser';\nimport { getLatestMergedPRAssociatedWithCommit } from './meta';\n\nexport type Category = {\n  text?: string,\n  changesetSummaryPatterns?: Array<string>,\n  pullRequestLabels?: Array<string>,\n}\n\nexport async function prefixSummary(summary: string, categories: Array<Category>, owner: string, repo: string, commitID: string)\n    : Promise<string> {\n  const summaryPatternMatcher = (pattern: string) => (RegexParser(pattern).exec(summary));\n\n  const pr = await getLatestMergedPRAssociatedWithCommit(owner, repo, commitID);\n\n  const labels = pr?.labels?.map(it => it.name);\n  const labelMatcher = (target: string) => (labels?.includes(target));\n\n  const prefixes: Array<string> = [];\n  categories.forEach((c) => {\n    if (\n      (c.changesetSummaryPatterns && c.changesetSummaryPatterns.filter(summaryPatternMatcher).length > 0)\n      || (c.pullRequestLabels && c.pullRequestLabels.filter(labelMatcher).length > 0)\n    ) {\n      prefixes.push(c.text || '');\n    }\n  });\n\n  const prefixedSummary = (prefixes.length > 0 ? `[${prefixes.join(', ')}] ` : '') + summary;\n  return prefixedSummary;\n}\n"]}