name: Application test

on:
  push:
    branches-ignore: [stable]

jobs:
  test:
    runs-on: ubuntu-latest

    # services:
    #   mongo:
    #     image: mongo:5.0.6
    #     env:
    #       MONGO_INITDB_ROOT_USERNAME: root
    #       MONGO_INITDB_ROOT_PASSWORD: password
    #     ports:
    #     - 27017:27017
    #     options: >-
    #       --health-cmd "mongo mongodb://root:password@localhost:27017/?authSource=admin --quiet --eval 'db.runCommand(\"ping\").ok'"
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5

    #   postgres:
    #     image: postgres:14.2
    #     env:
    #       POSTGRES_DB: test
    #       POSTGRES_PASSWORD: password
    #     ports:
    #     - 5432:5432
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5

    steps:
    # Start PostgreSQL
    # ref. https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-Readme.md#postgresql
    - run: sudo systemctl start postgresql.service
    - run: |
        mkdir -p /tmp/mongo/data
        mongod --dbpath /tmp/mongo/data --fork --logpath /tmp/mongo/log

    # GCS Mock for test
    - name: Setup fake-gcs-action
      run:
        docker run -d
                    -p 4443:4443
                    --name fake-gcs-action
                    fsouza/fake-gcs-server:1.37.3
                    --scheme http
                    --public-host localhost
                    --backend memory
    # S3 Mock for test
    - name: Setup minio
      run:
        docker run -d
                    -p 9000:9000
                    --name minio
                    -e "MINIO_ACCESS_KEY=minioadmin"
                    -e "MINIO_SECRET_KEY=minioadmin"
                    -e "MINIO_DOMAIN=s3.localhost"
                    minio/minio:RELEASE.2022-04-09T15-09-52Z
                    server
                    --address 0.0.0.0:9000
                    /data
    # Wait on all GCS and S3 server mocks
    # - uses: iFaxity/wait-on-action@v1
    #   with:
    #     resource: tcp://127.0.0.1:4443
    #     timeout: 30000
    # - uses: iFaxity/wait-on-action@v1
    #   with:
    #     resource: http://127.0.0.1:9000
    #     timeout: 30000

    # install tools
    # - uses: awalsh128/cache-apt-pkgs-action@v1
    #   with:
    #     packages:
    #       bzip2
    #       postgresql-common
    #       postgresql-client

    # - name: Install backup and restore tools
    #   run: |
    #     curl -O https://fastdl.mongodb.org/tools/db/mongodb-database-tools-debian10-x86_64-100.5.2.deb
    #     sudo apt-get update
    #     sudo apt-get install -y --no-install-recommends \
    #       ./mongodb-database-tools-debian10-x86_64-100.5.2.deb

    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: "16.13.1"
        cache: "yarn"
    - name: Set and restore cache of Turborepo
      uses: actions/cache@v2
      with:
        path: node_modules/.cache/turbo
        key: |
          turbo-${{ github.job }}-${{ github.sha }}
        restore-keys: |
          turbo-${{ github.job }}-
    - run: yarn install
    - run: yarn test
      env:
        AWS_ENDPOINT_URL: http://s3.localhost:9000
        GCP_ENDPOINT_URL: http://localhost:4443
        MONGODB_URI: mongodb://localhost:27017/
        POSTGRESQL_HOST: localhost
        POSTGRESQL_PASSWORD: postgres
    # [TODO] Coverage report
